micronaut:
  application:
    name: ProtocolSNBlogPlugin
    intercept-url-map:
      - pattern: /swagger/**
        access: isAnonymous()
      - pattern: /swagger-ui/**
        access: isAnonymous()
  server:
    cors:
      enabled: true
    port: 8082
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        mapping: /swagger-ui/**
        paths: classpath:META-INF/swagger/views/swagger-ui
  http:
    services:
      keycloak-admin:
        url: http://localhost:9080/
      node-manager::registration:
        url: http://localhost:8080
  security:
    token:
      jwt:
        signatures:
          jwks:
            keycloak:
              url: http://localhost:9080/realms/social-network-ecosystem/protocol/openid-connect/certs
    oauth2:
      clients:
        keycloak:
          client-id: blog-plugin
          client-secret: blog-plugin-secret
          openid:
            issuer: http://localhost:9080/realms/social-network-ecosystem
        keycloak-client:
          client-id: blog-plugin
          client-secret: blog-plugin-secret
          grant-type: client_credentials
          token:
            url: http://localhost:9080/realms/social-network-ecosystem/protocol/openid-connect/token
            auth-method: client_secret_post
          client-credentials:
            service-id-regex: node-manager::registration|keycloak-admin
          openid:
            issuer: http://localhost:9080/realms/social-network-ecosystem
    endpoints:
      logout:
        get-allowed: true
    authentication: bearer

coop:
  stlma:
    tech:
      protocolsn:
        plugin-name: ProtocolSNBlogPlugin
        plugin-host: http://localhost:8082

logger:
  levels:
    coop.stlma.tech.protocolsn: DEBUG
    io.micronaut.security: DEBUG
    io.micronaut.http: DEBUG

datasources:
  default:
    driver-class-name: org.postgresql.Driver
    jdbc-url: jdbc:postgresql://localhost:5443/blogplugin
    username: ${JDBC_USER:postgres}
    password: ${JDBC_PASSWORD:postgres}
    dialect: POSTGRES

jpa:
  default:
    properties:
      hibernate:
        hbm2ddl:
          auto: none

flyway:
  datasources:
    default:
      enabled: true
      locations: db/migrations